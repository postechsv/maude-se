name: Release
on:
  push:
    tags:
      - 'v*'
jobs:
  manylinux_2_28:
    name: Linux packages (manylinux_2_28)
    runs-on: ubuntu-latest
    steps:

    - name: Check out repository code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build Python packages
      run: |
        docker run -v $(pwd):/work -w /work quay.io/pypa/manylinux_2_28_x86_64 ./build/many_linux.sh

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: py-package-dist-many-linux
        path: out/

  macos:
    name: Build distribution 📦
    strategy:
      matrix:
        os: ['macos-latest','macos-13']
        python-version: ['3.8','3.9','3.10','3.11','3.12','3.13']

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    
    - name: Build Python package
      run: ./build/macos.sh

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: py-package-dist-${{ strategy.job-index }}
        path: out/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    runs-on: ubuntu-latest
    needs:
      - manylinux_2_28
      - macos

    environment:
      name: pypi
      url: https://pypi.org/p/maude-se

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: py-package-dist-*
        merge-multiple: true
        path: out/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: out/

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release

    runs-on: ubuntu-latest
    needs:
      # - manylinux_2_28
      # - macos  
      - publish-to-pypi
      # - publish-to-testpypi

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: py-package-dist-*
        merge-multiple: true
        path: out/

    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./out/*.whl

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""

    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' out/*.whl
        --repo '${{ github.repository }}'


  # publish-to-testpypi:
  #   name: Publish Python 🐍 distribution 📦 to TestPyPI
    
  #   runs-on: ubuntu-latest
  #   needs:
  #     - manylinux_2_28
  #     - macos

  #   environment:
  #     name: testpypi
  #     url: https://test.pypi.org/p/maude-se

  #   permissions:
  #     id-token: write  # IMPORTANT: mandatory for trusted publishing

  #   steps:
  #   - name: Download all the dists
  #     uses: actions/download-artifact@v4
  #     with:
  #       pattern: py-package-dist-*
  #       merge-multiple: true
  #       path: out/
  #   - name: Publish distribution 📦 to TestPyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1
  #     with:
  #       packages-dir: out/
  #       password: ${{ secrets.TEST_PYPI_API_TOKEN }}
  #       repository-url: https://test.pypi.org/legacy/
  #       verbose: true