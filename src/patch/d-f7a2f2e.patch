diff --git src/Meta/metaLevel.hh src/Meta/metaLevel.hh
index 76301f1..876efc0 100644
--- src/Meta/metaLevel.hh
+++ src/Meta/metaLevel.hh
@@ -38,6 +38,9 @@ class MetaLevel
 {
   NO_COPYING(MetaLevel);
 
+private:
+  friend class MetaLevelSmtOpSymbol;
+
 public:
   enum VariantFlags
     {
diff --git src/Mixfix/fancySymbols.cc src/Mixfix/fancySymbols.cc
index 825b96b..f5cf8ac 100644
--- src/Mixfix/fancySymbols.cc
+++ src/Mixfix/fancySymbols.cc
@@ -127,6 +127,8 @@ MixfixModule::newFancySymbol(Token prefixName,
       return new QuotedIdentifierOpSymbol(name, nrArgs);
     case SymbolType::META_LEVEL_OP_SYMBOL:
       return new MetaLevelOpSymbol(name, nrArgs, strategy);
+    case SymbolType::META_LEVEL_SMT_OP_SYMBOL: 
+      return new MetaLevelSmtOpSymbol(name, nrArgs, strategy);
     case SymbolType::MODEL_CHECKER_SYMBOL:
       return new ModelCheckerSymbol(name);
     case SymbolType::STRATEGY_MODEL_CHECKER_SYMBOL:
diff --git src/Mixfix/mixfixModule.cc src/Mixfix/mixfixModule.cc
index 6627c86..9ef5858 100644
--- src/Mixfix/mixfixModule.cc
+++ src/Mixfix/mixfixModule.cc
@@ -157,6 +157,7 @@
 
 //	metalevel class definitions
 #include "metaLevelOpSymbol.hh"
+#include "metaLevelSmtOpSymbol.hh"
 #include "interpreterManagerSymbol.hh"
 
 //	front end class definitions
diff --git src/Mixfix/specialSymbolTypes.cc src/Mixfix/specialSymbolTypes.cc
index f00c9af..cd84031 100644
--- src/Mixfix/specialSymbolTypes.cc
+++ src/Mixfix/specialSymbolTypes.cc
@@ -66,3 +66,4 @@
   MACRO(TimeManagerSymbol, SymbolType::TIME_MANAGER_SYMBOL)
   MACRO(PrngManagerSymbol, SymbolType::PRNG_MANAGER_SYMBOL)
   MACRO(ObjectConstructorSymbol, SymbolType::OBJECT_CONSTRUCTOR_SYMBOL)
+  MACRO(MetaLevelSmtOpSymbol, SymbolType::META_LEVEL_SMT_OP_SYMBOL)
\ No newline at end of file
diff --git src/Mixfix/symbolType.hh src/Mixfix/symbolType.hh
index 4c38a2d..b8f38b1 100644
--- src/Mixfix/symbolType.hh
+++ src/Mixfix/symbolType.hh
@@ -90,6 +90,7 @@ public:
     TIME_MANAGER_SYMBOL,
     PRNG_MANAGER_SYMBOL,
     OBJECT_CONSTRUCTOR_SYMBOL,
+    META_LEVEL_SMT_OP_SYMBOL,
 
     END_OF_SYMBOLS_WITH_ATTACHMENTS
   };
diff --git src/Mixfix/variableGenerator.cc src/Mixfix/variableGenerator.cc
index 8621129..e231357 100644
--- src/Mixfix/variableGenerator.cc
+++ src/Mixfix/variableGenerator.cc
@@ -1,125 +1,2 @@
-/*
 
-    This file is part of the Maude 3 interpreter.
-
-    Copyright 1997-2014 SRI International, Menlo Park, CA 94025, USA.
-
-    This program is free software; you can redistribute it and/or modify
-    it under the terms of the GNU General Public License as published by
-    the Free Software Foundation; either version 2 of the License, or
-    (at your option) any later version.
-
-    This program is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU General Public License for more details.
-
-    You should have received a copy of the GNU General Public License
-    along with this program; if not, write to the Free Software
-    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
-
-*/
-
-//
-//      Implementation for class VariableGenerator.
-//
-
-//      utility stuff
-#include "macros.hh"
-#include "vector.hh"
-
-//      forward declarations
-#include "interface.hh"
-#include "core.hh"
-#include "variable.hh"
-#include "mixfix.hh"
-#include "SMT.hh"
-
-//      interface class definitions
-#include "symbol.hh"
-#include "term.hh"
-
-//	variable class definitions
-#include "variableDagNode.hh"
-#include "variableTerm.hh"
-
-#include "freeDagNode.hh"
-
-//	SMT class defintions
-#include "SMT_Symbol.hh"
-#include "SMT_NumberSymbol.hh"
-#include "SMT_NumberDagNode.hh"
-
-//	front end class definitions
-#include "token.hh"
-#include "variableGenerator.hh"
-
-#ifdef USE_CVC4
-#include "cvc4_Bindings.cc"
-#elif defined(USE_YICES2) 
-#include "yices2_Bindings.cc"
-#else
-
-//
-//	Code for no SMT support case.
-//
-
-VariableGenerator::VariableGenerator(const SMT_Info& smtInfo)
-{
-  IssueWarning("No SMT solver linked at compile time.");
-}
-
-VariableGenerator::~VariableGenerator()
-{
-}
-
-VariableGenerator::Result
-VariableGenerator::assertDag(DagNode* dag)
-{
-  return SAT_UNKNOWN;
-}
-
-VariableGenerator::Result
-VariableGenerator::checkDag(DagNode* dag)
-{
-  return SAT_UNKNOWN;
-}
-
-void
-VariableGenerator::push()
-{
-}
-
-void
-VariableGenerator::pop()
-{
-}
-
-inline void
-VariableGenerator::clearAssertions()
-{
-}
-
-#endif
-
-//
-//	Common code
-//
-
-VariableDagNode*
-VariableGenerator::makeFreshVariable(Term* baseVariable, const mpz_class& number)
-{
-  Symbol* s = baseVariable->symbol();
-  VariableTerm* vt = safeCast(VariableTerm*, baseVariable);
-  int id = vt->id();
-
-  string newNameString = "#";
-  char* name = mpz_get_str(0, 10, number.get_mpz_t());
-  newNameString += name;
-  free(name);
-  newNameString += "-";
-  newNameString +=  Token::name(id);
-  int newId = Token::encode(newNameString.c_str());
-
-  return new VariableDagNode(s, newId, NONE);
-}
+#include "../src/Extension/smtManager.cc"
\ No newline at end of file
diff --git src/Mixfix/variableGenerator.hh src/Mixfix/variableGenerator.hh
index cd79c7c..8ad1619 100644
--- src/Mixfix/variableGenerator.hh
+++ src/Mixfix/variableGenerator.hh
@@ -25,35 +25,7 @@
 //
 #ifndef _variableGenerator_hh_
 #define _variableGenerator_hh_
-#include "SMT_Info.hh"
-#include "SMT_EngineWrapper.hh"
 
-#ifdef USE_CVC4
-#include "cvc4_Bindings.hh"
-#elif defined(USE_YICES2) 
-#include "yices2_Bindings.hh"
-#else
+#include "../src/Extension/smtManager.hh"
 
-//
-//	Code for no SMT support case.
-//
-
-class VariableGenerator : public SMT_EngineWrapper
-{
-public:
-  VariableGenerator(const SMT_Info& smtInfo);
-  ~VariableGenerator();
-  //
-  //	Virtual functions for SMT solving.
-  //
-  Result assertDag(DagNode* dag);
-  Result checkDag(DagNode* dag);
-  void clearAssertions();
-  void push();
-  void pop();
-
-  VariableDagNode* makeFreshVariable(Term* baseVariable, const mpz_class& number);
-};
-
-#endif
-#endif
+#endif
\ No newline at end of file
