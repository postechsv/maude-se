diff --git CMakeLists.txt CMakeLists.txt
index 93d1eb1..a51f080 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -1,9 +1,9 @@
 cmake_minimum_required(VERSION 3.12)
-project(maude)
+project(maudeSE)
 
 set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/build;${CMAKE_MODULE_PATH}")
 set(MAUDESMC_PATH "${CMAKE_SOURCE_DIR}/subprojects/maudesmc")
-set(BINDING_OUTPUT_NAME "maude")
+set(BINDING_OUTPUT_NAME "maudeSE")
 
 if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
 set(CMAKE_INSTALL_RPATH @loader_path)
@@ -27,6 +27,7 @@ endif()
 option(BUILD_LIBMAUDE "build libmaude before building the extension" YES)
 set(EXTRA_INCLUDE_DIRS "" CACHE PATH "Additional include paths")
 set(EXTRA_INSTALL_FILES "" CACHE PATH "Additional files to be installed")
+set(MAUDE_SE_INSTALL_FILES "" CACHE PATH "Additional MaudeSE files to be installed")
 set(EXTRA_SWIG_OPTIONS "" CACHE STRING "Additional options passed to swig")
 set(LANGUAGE "python" CACHE STRING "Generate wrappers for that language")
 set(JAVA_PACKAGE_NAME "es.ucm.maude.bindings" CACHE STRING "Name of the Java package for the bindings")
@@ -155,6 +156,7 @@ include_directories(
 	"${MAUDESMC_PATH}/src/Temporal"
 	"${MAUDESMC_PATH}/src/3rdParty"
 	"${MAUDESMC_PATH}/src/AU_Theory"
+	"${MAUDESMC_PATH}/src/Extension"
 	${EXTRA_INCLUDE_DIRS}
 )
 
@@ -187,7 +189,7 @@ swig_link_libraries(maude PRIVATE libmaude)
 #
 ## Install all the components
 
-install(TARGETS maude LIBRARY DESTINATION maude)
+install(TARGETS maude LIBRARY DESTINATION maudeSE/maude)
 install(FILES
 	"${MAUDESMC_PATH}/installdir/lib/libmaude${CMAKE_SHARED_LIBRARY_SUFFIX}"
 	"${MAUDESMC_PATH}/src/Main/prelude.maude"
@@ -202,13 +204,27 @@ install(FILES
 	"${MAUDESMC_PATH}/src/Main/term-order.maude"
 	"${MAUDESMC_PATH}/src/Main/time.maude"
 	${EXTRA_INSTALL_FILES}
-	DESTINATION maude
+	DESTINATION maudeSE/maude
 )
 
 if (${LANGUAGE} STREQUAL python)
 	# The SWIG_SUPPORT_FILES property is only accurate for Python
 	get_property(wrapper_file TARGET maude PROPERTY SWIG_SUPPORT_FILES)
-	install(FILES "${wrapper_file}" RENAME __init__.py DESTINATION maude)
+	install(FILES "${wrapper_file}" RENAME __init__.py DESTINATION maudeSE/maude)
+	file(GLOB DEPLOY_FILES_AND_DIRS "${MAUDE_SE_INSTALL_FILES}/pysmt/*")
+	foreach(ITEM ${DEPLOY_FILES_AND_DIRS})
+	IF( IS_DIRECTORY "${ITEM}" )
+		LIST( APPEND DIRS_TO_DEPLOY "${ITEM}" )
+	ELSE()
+		LIST( APPEND FILES_TO_DEPLOY "${ITEM}" )
+	ENDIF()
+	endforeach()
+	INSTALL(FILES ${FILES_TO_DEPLOY} DESTINATION maudeSE)
+	INSTALL(DIRECTORY ${DIRS_TO_DEPLOY} DESTINATION maudeSE)
+	install(FILES
+		"${MAUDE_SE_INSTALL_FILES}/smt-check.maude" 
+		"${MAUDE_SE_INSTALL_FILES}/maude-se-meta.maude"
+		DESTINATION maudeSE/maude)
 
 elseif (${LANGUAGE} STREQUAL java)
 	include(UseJava)
diff --git swig/maude.i swig/maude.i
index 432e6b0..6afbcb8 100644
--- swig/maude.i
+++ swig/maude.i
@@ -238,3 +238,5 @@ bool setAssocUnifDepth(float m);
 %include module.i
 %include view.i
 %include hook.i
+%include rwsmt.i
+%include core.i
\ No newline at end of file
diff --git swig/specific/python.i swig/specific/python.i
index a061ff6..62d7a8f 100644
--- swig/specific/python.i
+++ swig/specific/python.i
@@ -385,7 +385,7 @@ __version__ = '1.5.0'
 // Trim the strings returned by all function named getMetadata
 // to efficiently get rid of the quotes in the internal Maude strings
 %typemap(out) const char* getMetadata {
-	$result = SWIG_FromCharPtrAndSize(($1 ? $1 + 1 : 0), ($1 ? strlen($1) - 2 : 0));
+	$result = SWIG_FromCharPtrAndSize(($1 ? $1 : 0), ($1 ? strlen($1) : 0));
 }
 
 // Methods for obtaining the operator and term hooks as dictionaries
